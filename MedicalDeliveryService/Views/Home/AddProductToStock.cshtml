@model AddingProductToStockViewModel

@{
    ViewData["Title"] = "AddProductToStock";
}

<h1>AddProductToStock</h1>

<h4>ProductAndFactoryEntity</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="CreateProductToStock">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FactoryID" class="control-label"></label>
                <input type="hidden" name="FactoryIDStr" asp-for="FactoryID" class="form-control" required />
                <span asp-validation-for="FactoryID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product" class="control-label"></label>
                @Html.DropDownListFor(model => model.Product, Model.PossibleProducts, "Select an option", new { id = "SelectedProduct", required = "required" })
                <span asp-validation-for="Product" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitsInStock" class="control-label"></label>
                <input type="number" name="UnitsInStock" asp-for="UnitsInStock" class="form-control" min="0" step="1" required />
                <span asp-validation-for="UnitsInStock" class="text-danger"></span>
            </div>
            <input type="hidden" name="FactoryId" value="@Model.FactoryID" required />
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>

<div>
    <button onclick="window.location.href='@Url.Action("Index")'" class="btn btn-secondary">Back to List</button>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
